# 코딩 규칙
# 변수(variable) :  메모리 영역(주소) 의 별칭
# 메모리 주소는 2진수로 되어 있으며 8비트(1바이트) 단위로 구성한다.
# 변수 a 를 선언하게 되면 메모리의 영역을 할당한다. 

#%%

a = [1,2,3,4,5]
print(a)
      
#%%

s = "hello"
s2 = "world"

print(s,s2)
print("s, s2")
#%%

tt = 1234
print(tt)

#%%

sx ="철수는 영수에게 '어디에가니'라고 물었지만 무시당했다."
print(sx)

si ="""철수는 미미에게 "너도 가니"라고 물었지만 또 무시당했다"""
print(si)

su ='철수는 선생님한테 "재네가 무시한다"라고 말했지만 선생도 무시했다'
print(su)

print("I don't want to go school")

#%%

홍길동 = 100000
전우치 = '나의 이름은 전우치'
양귀비 = '나는 양귀비입니다.'
양귀비 = 전우치 # 원래의 값은 사라진다. 전우치의 내용은 유지된다.

print(홍길동)
print(전우치)
print(양귀비)


#%%
# 변수를 선언하는 명명규칙(이름을 만드는 규칙)
# 소문자(a~z)
# 대문자(A~Z) 
# 숫자 (0~9)
# 특수문자 : 언더스코어 (_) SHIFT + -
# 제약조건 (예외사항)
# -> 숫자로 시작할 수 없다
# -> 영문자나 언더스코어로 시작해야 한다.
# -> 예약서(reserved word, key-word)를 사용할 수 없다.

#%%
韓 = "姜大允"
print(韓)
姜大允 = "강대윤"
print(姜大允)

#%%

# 세미콜론(;)
# 문장의 끝에 붙인다.
# 일반적으로 생략한다.
# 여러 명령문을 하나의 라인에 기술할 때 세미콜론을 붙여서 쓸수 있다.


#%%
# 들여쓰기(indent)
# 원래 tab 은 기본적으로 8칸이다.
# 코드 블럭은 일반적으로 tab (4칸) 단위로 들여쓰기를 한다.
# 같은 블럭에서 들여쓰기 간격이 같아야 한다.
# 탭(tab), 스페이스(space) 를 혼용해서는 안된다(혼용해도 오류가 나지 않는다.)

#%%

a = 10
b = 20
c = a + b

print("a=",a, "b=", b, "c=", c)
print("a={0} ,b={1}, c={2}".format(a,b,c))
print(f"a={a} ,b={b}, c={c}")

#%%

x = 10; y = 20; z = x + y; a="멍멍이"


print("x={0} ,y={1}, z={2}".format(x,y,z))
print("x=%d, y=%d, z=%d" %(x,y,z))
print(f"오늘 {a} 를 {x} 마리 보았다")


#%%
# 리터럴(literal) : 문자열 리터럴
# 문자열 안에서는 샾은 주석으로 인식되지 않는다.
print("# 파이썬 주석 설명 #")
# 시작은 큰 따옴표 세개를 써야 멀티라인 주석이 된다

#%%

abc = input("값을 입력하세요: ")

print(abc)
print(type(abc))

#%%

abc = input()
print("당신이 원하는건 뭐야?:", abc)


