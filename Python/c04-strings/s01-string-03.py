# -*- coding: utf-8 -*-

# 문자열(string): str()

#%%

s1 = "문자열" # 큰따옴표
s2 = '문자열' # 작은따옴표

print(type(s1)) # <class 'str'>
print(type(s2)) # <class 'str'>

#%%

ssl = "안녕하세요?\n반갑습니다.\n환영합니다.\n"
print(ssl)

#%%

# 멀티라인(다중라인)
# Enter: CRLF(Windows), CR(Mac), LF(Unix), \n
# LF(\n): 라인피드, 줄바꿈, 다음 줄로 이동    
# CR(\r): 캐리지 리턴, 커서를 맨 앞으로 이동
# FF(\f): 폼 피드, 다음 페이지

sml = """안녕하세요?
반갑습니다.
환영합니다.
"""

print(sml)

#%%

# 멀티라인 주석
# 첫 번째 컬럼에서 시작해야 한다.
print("# 멀티라인 주석: 시작")

"""
다중라인 주석 시작입니다.
"""

print("# 멀티라인 주석: 종료")

#%%

# 변수에 대입을 하면 다중라인 문자열로 처리
sml = """안녕하세요?
    반갑습니다.
    환영합니다.
"""
print('-' * 20)
print(sml)
print('-' * 20)

#%%

# 결과
"""
--------------------
안녕하세요?
    반갑습니다.
    환영합니다.

--------------------
"""

#%%
# 변수에 대입을 하면 다중라인 문자열로 처리
sml = """안녕하세요?
반갑습니다.
환영합니다."""
print('-' * 20)
print(sml)
print('-' * 20)

#%%

"""
--------------------
안녕하세요?
반갑습니다.
환영합니다.
--------------------
"""

#%%

smx = "안녕하세요?"
smx += "반갑습니다."
smx += "환영합니다."

print(smx) # "안녕하세요?반갑습니다.환영합니다."

#%%

# 문자열 덧셈 이용
# 문자열 맨 뒤에 라인피드(\n) 추가
smx = "안녕하세요?\n"
smx += "반갑습니다.\n"
smx += "환영합니다."

print(smx)

#%%

"""
안녕하세요?
반갑습니다.
환영합니다.
"""

#%%

# 백슬래시(\)를 사용하여 문자열을 연결, 원화표시
sme = "안녕하세요?\
반갑습니다.\
환영합니다."

print(sme)

#%%

# ※ 중요 : 보기에는 비슷하지만 다른 문자 즉 특수문자
# ㅊ+한자: ½, ¼
d1 = '$'   # 일반문자
d2 = '＄'  # 특수문자: ㄹ+한자
d12 = d1 == d2
print(f"{d1} == {d2} ? {d12}")  # False

#%%

# 문자에 해당하는 코드값: ord(ch)
print(f"{d1}: ", ord(d1)) # 36
print(f"{d2}: ", ord(d2)) # 65284

#%%

# 코드값에 해당하는 문자: chr(code)
print(f"{ord(d1)}: ", chr(ord(d1))) # 36:  $
print(f"{ord(d2)}: ", chr(ord(d2))) # 65284:  ＄







