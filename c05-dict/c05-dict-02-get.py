# 딕셔너리(Dictionary)
# 자료형: dict

# 키와 값으로 구성된 자료형
# 파이썬의 표기: dict
# 
# 중괄호로 감싼 형태
# { 키1:값1, 키1:값2, ... }

#############################################
# 키(Key)는 해시(Hash)로 만들어 진다.
# 특징:
#   - 장점: 검색속도가 빠르다.
#   - 단점: 용량을 많이 차지한다.
#   - 단점: 순차적으로 처리하는 속도가 느리다.
# 키(key)는 변하는 않는 값을 사용해야 한다.
#   - 리스트(list)는 사용할 수 없다.(값을 변경 가능)
#   - 중복을 허용하지 않는다.(유일한 값)

#%%

# 중복을 허용하지 않는다.(유일한 값)
# 중복이 되면 먼저 지정된 키값을 교체
dept = { 
    1000: "사장",
    2000: "부사장",
    3000: "부장",
    4000: "사원", # 덮어 쓰기
    4000: "멤버"  # 기존의 키를 대체
}

print(dept)
# {1000: '사장', 2000: '부사장', 3000: '부장', 4000: '멤버'} 

#%%

print(dept[4000]) # 멤버

#%%

# 존재하지 않는 키를 찾으면 예외발생 : KeyError
print('5000:', dept[5000])


#%%

# 예외를 발생시키지 않으려면 : dict.get(key)
# 리턴 : None
empname = dept.get(5000)
print(f"사번(5000): ", empname) # None



