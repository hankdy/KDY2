# 리스트 슬라이싱(slicing)
# 리스트[시작위치:종료위치:건너뛰기]
# 시작위치: 0부터
# 종료위치: n - 1
# 건너뛰기: 스텝

lst = [0,1,2,3,4,5,6,7,8,9]

# 슬라이싱
print('전체:', lst[:])
print('3~7:', lst[3:7]) # [3, 4, 5, 6]

#%%

# 마지막 요소를 제외한 나머지
print('마지막 요소를 제외:', lst[:len(lst) - 1])
print('마지막 요소를 제외:', lst[:-1])

#%%

# 마지막 요소만 참조(슬라이싱이 아님)
print('마지막 요소만 참조:', lst[-1], type(lst[-1])) # 9 <class 'int'>

#%%

# 마지막 요소만 슬라이싱
print('마지막 요소만 슬라이싱:', lst[-1:], type(lst[ -1 : ])) #  [9] <class 'list'>
print('마지막 요소만 슬라이싱:', lst[-1:len(lst)]) # [9]

#%%

# 참조의 변수에 값을 할당해도 원본의 값은 변경되지 않는다.
# 참조의 위치에 어떤 값이 있느냐에 따라 달라짐
# 참조의 위치의 값은 정수(9)이므로 단순 참조 형태가 된다.
# ※ 만약 참조되는 위치에 객체 자료형이 있으면 참조하는 변수의 값을 변경하면 원본도 수정된다.
lastr = lst[-1] # 정수(9)
lastr = 99
print(lastr, lst) # 99 [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 원본의 변화는 없다.

#%%

# 슬라이싱은 새로운 메모리에 할당됨으로 원본과 개별적이다.
lastp = lst[-1:]
lastp[0] = 88
print(lastp, type(lastp))
print(lst)

#%%







